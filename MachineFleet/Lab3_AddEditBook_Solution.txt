#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

typedef struct
{
	long bookNum;
	char title[30];
	char author[25];
	double price;
}bookT;


void displayAll(bookT* dB, int size);
void searchBook(bookT* dB, int size);
void addBook(bookT* dB, int size);
void editBook(bookT* dB, int size);
void saveBook(bookT* dB, int size);
void loadBook(bookT** dB, int* size);
void main()
{
	int numBooks;
	int option;
	int i;
	bookT* myLib;
	FILE* fp;

	/*fp = fopen("backUp.txt", "r");

	if (fp == NULL)
	{
		printf("Please enter the number of books\n");
		scanf("%d", &numBooks);

		myLib = (bookT*)malloc(numBooks * sizeof(bookT));

		for (i = 0;i < numBooks;i++)
		{
			//(*(myLib + i)).bookNum = 0;
			(myLib + i)->bookNum = 0;
			strcpy((myLib + i)->author, "Empty");
			strcpy((myLib + i)->title, "Empty");
			(myLib + i)->price = 0;
		}

		displayAll(myLib, numBooks);
	}

	else
	{
		fscanf(fp, "%d", &numBooks);

		myLib = (bookT*)malloc(numBooks * sizeof(bookT));

		for (i = 0;i < numBooks;i++)
		{
			fscanf(fp, "%ld %s %s %lf", &(myLib + i)->bookNum, (myLib + i)->title, (myLib + i)->author, &(myLib + i)->price);
		}
		
		displayAll(myLib, numBooks);
	}
	
	*/

	loadBook(&myLib, &numBooks);

	displayAll(myLib, numBooks);


	printf("Please enter 1 to Search for a book\n");
	printf("Please enter 2 to Add One book\n");
	printf("Please enter 3 to Edit a book\n");
	printf("Please enter -1 to Exit\n");
	scanf("%d", &option);

	while (option != -1)
	{
		if (option == 1)
		{
			searchBook(myLib, numBooks);
		}

		else if (option == 2)
		{
			addBook(myLib, numBooks);
		}

		else if (option == 3)
		{
			editBook(myLib, numBooks);
		}




		printf("Please enter 1 to Search for a book\n");
		printf("Please enter 2 to Add One book\n");
		printf("Please enter 3 to Edit a book\n");
		printf("Please enter -1 to Exit\n");
		scanf("%d", &option);
	}

	saveBook(myLib, numBooks);
	free(myLib);
}


void displayAll(bookT* dB, int size)
{
	int i;


	printf("dB is %d and size is %d\n", dB, size);
	for (i = 0;i < size;i++)
	{
		printf("%ld %s %s %lf\n", (dB + i)->bookNum, (dB + i)->title, (dB + i)->author, (dB + i)->price);
	}
}

void searchBook(bookT* dB, int size)
{
	int i;
	long searchNum;
	int found = 0;

	printf("Please enter the book number you are looking for\n");
	scanf("%ld", &searchNum);

	for (i = 0;i < size;i++)
	{
		if ((dB + i)->bookNum == searchNum)
		{
			printf("Book Number %ld\n", (dB + i)->bookNum);
			printf("Title %s\n", (dB + i)->title);
			printf("Author %s\n", (dB + i)->author);
			printf("The price is %lf\n", (dB + i)->price);
			i = size;
			found = 1;

		}

	}

	
	if (found == 0)
		printf("The book can not be found\n");


}


void addBook(bookT* dB, int size)
{
	int i;

	for (i = 0;i < size;i++)
	{
		if ((dB + i)->bookNum == 0)
		{
			printf("Please enter the book number, title, author and price\n");
			
			scanf("%ld %s %s %lf", &(dB + i)->bookNum, (dB + i)->title, (dB + i)->author, &(dB + i)->price);
			return;
		}
	}

	printf("Can not add another book as the array is full\n");

}


void editBook(bookT* dB, int size)
{
	int i;
	long searchNum;
	int found = 0;

	printf("Please enter the book number you are looking to edit\n");
	scanf("%ld", &searchNum);

	for (i = 0;i < size;i++)
	{
		if ((dB + i)->bookNum == searchNum)
		{
			printf("Enter the new price\n");
			scanf("%lf", &(dB + i)->price);

			i = size;
			found = 1;

		}

	}

	if (found == 0)
		printf("The book can not be found\n");

}

void saveBook(bookT* dB, int size)
{
	FILE* fp;
	int i;

	fp = fopen("backUp.txt", "w");

	if (fp == NULL)
	{
		printf("The back up file could not be opened\n");
	}

	else
	{
		fprintf(fp, "%d\n", size);


		for (i = 0;i < size;i++)
		{
			fprintf(fp,"%ld %s %s %lf\n", (dB + i)->bookNum, (dB + i)->title, (dB + i)->author, (dB + i)->price);
		}

		fclose(fp);
	
	}

}


void loadBook(bookT** dB, int* size)
{
	FILE* fp;
	int i;

	fp = fopen("backUp.txt", "r");

	if (fp == NULL)
	{
		printf("Please enter the number of books\n");
		scanf("%d", size);

		*dB = (bookT*)malloc(*size * sizeof(bookT));

		for (i = 0;i < *size ;i++)
		{
			//(*(myLib + i)).bookNum = 0;
			(*dB + i)->bookNum = 0;
			strcpy((*dB + i)->author, "Empty");
			strcpy((*dB + i)->title, "Empty");
			(*dB + i)->price = 0;
		}

		
	}

	else
	{
		fscanf(fp, "%d", size);

		*dB = (bookT*)malloc(*size * sizeof(bookT));

		for (i = 0;i < *size;i++)
		{
			fscanf(fp, "%ld %s %s %lf", &(*dB + i)->bookNum, (*dB + i)->title, (*dB + i)->author, &(*dB + i)->price);
		}

		
	}
}